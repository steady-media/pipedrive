version: 2.1

# commands (one or more steps) reused in many jobs
commands:
  # all caches include a version in their name (e.g. foo-cache-v1), the version is an arbitrary number
  # that can be incremented to invalidate a cache in case of errors or other unforeseen circumstances
  run_dializer_with_cache:
    steps:
      - run:
          name: Store elixir version for PLT cache
          command: elixir --version > ELIXIR_VERSION
      - run:
          name: Store erlang version for PLT cache
          command: erl -eval '{ok, Version} = file:read_file(filename:join([code:root_dir(), "releases", erlang:system_info(otp_release), "OTP_VERSION"])), io:fwrite(Version), halt().' -noshell > ERLANG_VERSION
      - restore_cache:
          name: Restore PLT cache
          key: plt-cache-v1-{{ checksum "ERLANG_VERSION" }}-{{ checksum "ELIXIR_VERSION" }}
      - run: mix dialyzer
      - save_cache:
          name: Save PLT cache
          key: plt-cache-v1-{{ checksum "ERLANG_VERSION" }}-{{ checksum "ELIXIR_VERSION" }}
          paths:
            - /home/circleci/repo/priv/plts

jobs:
  build:
    environment:
      PIPEDRIVE_COMPANY_SUBDOMAIN: company-subdomain
      PIPEDRIVE_API_TOKEN: invalid-token
    docker:
      - image: cimg/elixir:1.13.0

    working_directory: ~/repo
    steps:
      - checkout

      - run: mix local.hex --force && mix local.rebar --force
      - run: mix deps.get
      - run: mix compile --force --warnings-as-errors
      - run: mix credo
      - run_dializer_with_cache
      - run: mix coveralls
      - run: mix test
